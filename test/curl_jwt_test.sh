#!/bin/bash

# JWT Testing with curl commands for Jupiter DEX Substreams
# This script tests the foundational store integration using curl
# No need to commit JWT tokens - they're passed as environment variables

set -e

echo "üöÄ Starting JWT Testing with curl for Jupiter DEX Substreams..."

# Check if JWT token is set
if [ -z "$SUBSTREAMS_API_TOKEN" ]; then
    echo "‚ùå Error: SUBSTREAMS_API_TOKEN environment variable is not set"
    echo "Please set your JWT token:"
    echo "export SUBSTREAMS_API_TOKEN='your-jwt-token-here'"
    exit 1
fi

echo "‚úÖ JWT Token found: ${SUBSTREAMS_API_TOKEN:0:20}..."

# Base URL for substreams.dev
BASE_URL="https://substreams.dev"

# Test 1: Test JWT Authentication
echo "üîê Testing JWT Authentication..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_jwt_auth_test"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ JWT Authentication test completed"

# Test 2: Test Foundational Store Access
echo "üè™ Testing Foundational Store Access..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_jwt_test"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Foundational Store Access test completed"

# Test 3: Test Jupiter Instructions
echo "üîÑ Testing Jupiter Instructions..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_jupiter_instructions"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Jupiter Instructions test completed"

# Test 4: Test Jupiter Analytics
echo "üìä Testing Jupiter Analytics..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_jupiter_analytics"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Jupiter Analytics test completed"

# Test 5: Performance Test
echo "‚ö° Running Performance Test..."
time curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310875,
    "modules": ["map_jwt_test"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Performance test completed"

# Test 6: Test SPL Account Store
echo "üîë Testing SPL Account Store..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_spl_initialized_account"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ SPL Account Store test completed"

# Test 7: Test Trading Data Store
echo "üìà Testing Trading Data Store..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_jupiter_trading_data"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Trading Data Store test completed"

# Test 8: Test Token Price Store
echo "üí∞ Testing Token Price Store..."
curl -X POST \
  -H "Authorization: Bearer $SUBSTREAMS_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "start_block": 31310775,
    "stop_block": 31310785,
    "modules": ["map_token_prices"]
  }' \
  "$BASE_URL/api/v1/run" \
  --silent --show-error --fail

echo "‚úÖ Token Price Store test completed"

echo "üéâ All JWT tests completed successfully!"
echo "üìä Summary:"
echo "  - JWT Authentication: ‚úÖ"
echo "  - Foundational Store Access: ‚úÖ"
echo "  - Jupiter Instructions: ‚úÖ"
echo "  - Jupiter Analytics: ‚úÖ"
echo "  - Performance: ‚úÖ"
echo "  - SPL Account Store: ‚úÖ"
echo "  - Trading Data Store: ‚úÖ"
echo "  - Token Price Store: ‚úÖ"